security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            provider: app_user_provider

    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/movies, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/types, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/people, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
